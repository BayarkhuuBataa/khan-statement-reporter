const assert = require('assert');
const { rowsToStatements } = require('../src/scraper_utils');
const { DateTime } = require('luxon');

describe('Statement parsing from rows', () => {
  it('Parses correctly', () => {
    const rows = [
      ["2020.10.10 19:15", "5071", "1,824,410.91", "-30,000.00", "0.00", "1,794,410.91", "99119288", "5063082521"],
      ["2020.10.10 19:15", "5071", "1,794,410.91", "-100.00", "0.00", "1,794,310.91", "Апп-р хийсэн гүйлгээний хураамж", ""],
      ["2020.10.10 19:16", "5063", "1,794,310.91", "-50.00", "0.00", "1,794,260.91", "Ухаалаг мэдээ үйлчилгээний хураамж", ""],
      ["2020.10.10 19:43", "5071", "1,794,260.91", "-2,000.00", "0.00", "1,792,260.91", "737273", "5400888006"],
      ["2020.10.10 19:43", "5071", "1,792,260.91", "0.00", "1,000.00", "1,793,260.91", "test", "5400888006"],
      ["2020.10.10 19:44", "5071", "1,793,260.91", "0.00", "1,000.00", "1,794,260.91", "test", "5400888006"],
      ["2020.10.10 21:47", "5071", "1,794,260.91", "-2,000.00", "0.00", "1,792,260.91", "gege", "5400888006"],
      ["2020.10.10 21:50", "5071", "1,792,260.91", "0.00", "1,000.00", "1,793,260.91", "aa", "5400888006"],
      ["2020.10.10 21:53", "5071", "1,793,260.91", "0.00", "200.00", "1,793,460.91", "99999999", "5400888006"],
      ["2020.10.11 14:19", "5071", "1,793,460.91", "0.00", "300.00", "1,793,760.91", "kek", "5400888006"],
      ["2020.10.12 10:17", "5071", "1,793,760.91", "-150,000.00", "0.00", "1,643,760.91", "99119288", "5063082521"],
      ["2020.10.12 10:17", "5071", "1,643,760.91", "-100.00", "0.00", "1,643,660.91", "Апп-р хийсэн гүйлгээний хураамж", ""],
      ["2020.10.12 10:18", "5071", "1,643,660.91", "0.00", "200.00", "1,643,860.91", "testtest", ""],
    ];
    const parsed = rowsToStatements(
      rows,
      DateTime.local().setZone('Asia/Ulaanbaatar').set({
        year: 2020, month: 10, day: 10, hour: 19, minute: 43
      }),
    );

    assert.deepStrictEqual(
      parsed.map(s => s.hash),
      [
        'a87239b0f5c886f0ae9c2ec5a6b6d7f7cbee233f998fed3e36a7e15affbc80cc',
        'dda8bf7bbc6595356aeb5a630016ffa8b46400ecfc996bd4d88df967b8ea056e',
        'ebbcb02201d08ee03bf168bb0bbdebe6bc7c20fa539820c4357490be3c7b26fe',
        'd1e92680fa191dbb73db0d04225a7a17b2296a3b8b95b5d720daf2e85c8da573',
        '6086b2e018535843d728042f3e28aa2a8c919da6558d84631b715830682bb1d2'
      ]
    );
  });

  it('Currectly handle new day switching', () => {
    const rows = [
      ["2020.10.11 23:10", "5071", "1,793,060.91", "0.00", "200.00", "1,793,260.91", "88888888", "5400888006"],
      ["2020.10.11 23:40", "5071", "1,793,260.91", "0.00", "200.00", "1,793,460.91", "99999999", "5400888006"],
      ["2020.10.11 23:59", "5071", "1,793,460.91", "0.00", "300.00", "1,793,760.91", "kek", "5400888006"],
      ["2020.10.12 00:02", "5071", "1,793,760.91", "-150,000.00", "0.00", "1,643,760.91", "99119288", "5063082521"],
      ["2020.10.12 00:18", "5071", "1,643,760.91", "0.00", "200.00", "1,643,960.91", "testtest", ""],
    ];
    const parsed = rowsToStatements(
      rows,
      DateTime.local().setZone('Asia/Ulaanbaatar').set({
        year: 2020, month: 10, day: 12, hour: 0, minute: 1
      }).minus({ minutes: 30 }),
    );

    assert.deepStrictEqual(
      parsed.map(s => s.hash),
      [
        '712be62afe936992c29a29c1c03b5d3b295534e158a8f0eff32927b2870dfb92',
        '131c2cc05bd6cd4198dd9bd6189bfa3af6e8c040ba727f06d9e8436d966d9781',
        'db4c2549524641fdd6612fe5fa5b337b9b4c2fd2ab9534f75531d5e580d5981d'
      ]
    );
  });
});
